---
import { articlesHandler } from "@/lib/handlers/articles";
import { categoriesHandler } from "@/lib/handlers/categories";
import type { Article, Meta } from "@/lib/types";
import ListLayout from "@/layouts/list.astro";
import WideCard from "@/components/cards/wideCard.astro";
import { scopesHandler } from "@/lib/handlers/scopes";
import { SITE } from "@/lib/config";
import RecentNews from "../_home/recentNews.astro";
import BigArticleCard from "@/components/cards/bigArticleCard.astro";
import { parseArticles } from "@/lib/utils/objects";


const { categoria } = Astro.params;

const category = categoriesHandler.oneCategoryBySlug(categoria as string);
const isScope = !category;
const taxonomy = category || scopesHandler.oneScopeBySlug(categoria as string); 
 
if(!taxonomy) return Astro.redirect("/404");


const taxonomyArticles: Article[] = parseArticles(
  isScope
  ? await articlesHandler.articlesByScope(taxonomy.id)
  : await articlesHandler.articlesByCategory(taxonomy.id) 
); 

 if(taxonomyArticles.length === 0) return Astro.redirect("/404");

const bigArticle = taxonomyArticles[0];
const articles = taxonomyArticles.slice(1, taxonomyArticles.length);

 const title = isScope 
                ? `Noticias del Ã¡mbito ${(taxonomy.name).toLowerCase()}`
                : `Noticias en ${(taxonomy.name).toLowerCase()}`; 

const meta: Meta = {
  title:`${title} | ${SITE.title}`,
  metaTitle: title,
  description: taxonomy.description,
  type: "website",
  ogImage: "/og-favicon.webp",
  ogImageAlt: title,
};

---
<ListLayout headerTitle={title} meta={meta}>
  <div class="flex flex-col lg:flex-row lg:w-[1024px] max-w-[1024px] ">
    <BigArticleCard
      taxonomy={isScope ? "scope" : "category"}
      article={bigArticle}
    />
    <RecentNews page="category" />
  </div>
  <div class="flex justify-start lg:w-[1024px] max-w-[1024px] ">
  {articles.length === 0 
    ? null
    :(
    <ul class="flex flex-col max-w-[733px] gap-5 flex-1 ">
      {
        articles.map((article) => (
          <WideCard
            taxonomy={isScope ? "scope" : "category"}
            article={article}
            isLast={articles.lastIndexOf(article) === articles.length - 1}
          />
        ))
      }
    </ul>
    
    <div class="flex " ></div>
    )}
    </div>
  </ListLayout>


