---
import type { Link } from "@/lib/types";

type Props = {
  item: Link;
};
const currentPath = Astro.url.pathname;
const { item } = Astro.props;

function removeAcents(text : string){
  const accents:Record<string, string> = {
    á: "a",
    é: "e",
    í: "i",
    ó: "o",
    ú: "u",
    ñ: "n",
  };

  return text
    .toLowerCase()
    .split("")
    .map((char) => accents[char] || char)
    .join("");
}

function isActive(item: Link, currentPath: string) {
  const segment = currentPath.split("/")[2];
  return (
    (item.text === "Actualidad" && currentPath === "/") ||
    (item.text !== "Actualidad" &&
      currentPath.split("/").includes(removeAcents(item.text)))
  );
}

function formatHref(href: string) {
  return href === "/" ? "/" : `${href}`;
}
---

<li
  class:list={[
    "relative after:absolute after:-bottom-2 after:left-0 after:h-[1.5px] after:w-full after:transition-all after:duration-300",
    isActive(item, currentPath)
      ? "after:bg-base-content pointer-events-none bg-amber-300"
      : "after:bg-transparent",
  ]}
>
  <a href={formatHref(item.href)} aria-label={item.text}>{item.text}</a>
</li>
