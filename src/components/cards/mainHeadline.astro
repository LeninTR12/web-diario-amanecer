---
import { Image } from "astro:assets";
import Divider from "@/components/bases/divider.astro";
import { categoriesHandler } from "@/lib/handlers/categories";
import { formatDateTime } from "@/lib/utils/date";
import imageNotFound from "src/assets/images/404.webp";
import type { Article } from "@/lib/types";
import { decode } from "html-entities";
import { SITE } from "@/lib/config";
import BigArticleCard from "./bigArticleCard.astro";

type Props = {
  articles: Article[];
};

const { articles } = Astro.props;

const bigArticle = articles[0];
const smallArticles = articles.slice(1, 3);

const bigArticleCategory = categoriesHandler.oneCategory(
  bigArticle.categories[0]
);
const smallArticlesCategories = smallArticles.map((article) =>
  categoriesHandler.oneCategory(article.categories[0])
);
---
<BigArticleCard
  article={bigArticle}
  category={bigArticleCategory}
/>
<div>
  {
    smallArticles.map((article, index) => (
      <article
        class="group py-2 flex items-stretch gap-2 group relative isolate"        
      >
        <div class="flex flex-col flex-1">
          <div class="flex items-center gap-2 mb-1">
            <div class="flex-1">
              <h3 class="text-base lg:group-hover:underline mb-1">
                <a
                class="text-red-400 font-black"
                  href={`/${smallArticlesCategories[index].slug}/${article.slug}`}
                  title={decode(String(article.title.rendered))}
                >
                  {article.title.rendered}
                </a>
              </h3>
            </div>
          </div>
          <div class="flex items-center text-xs text-base-content/80 mt-1 lg:mt-auto">
            <span class="text-[#10477C] dark:text-secondary px-1 mx-2 bg-[#FBC208]">
              {smallArticlesCategories[index].name}
            </span>

            <span>{formatDateTime(article.date)}</span>
            <Divider />
            <span class="text-primary dark:text-secondary">{SITE.author}</span>
          </div>
        </div>

        <div class="overflow-hidden w-[165px] h-[125px] shrink-0">
          <Image
            src={
              article._embedded["wp:featuredmedia"]?.[0]["source_url"] ||
              imageNotFound
            }
            alt={decode(String(article.title.rendered))}
            loading="eager"
            class="object-cover rounded w-full h-full"
            width={165}
            height={125}
          />
        </div>
      </article>
    ))
  }
</div>
