---
import imageNotFound from "src/assets/images/404.webp";
import { formatDateTime } from "@/lib/utils/date";
import { categoriesHandler } from "@/lib/handlers/categories";
import type { Category, Article } from "@/lib/types";
import { decode } from "html-entities";



type Props = {
  article: Article;
  isFirst?: boolean;
  isLast?: boolean;
  type?: "singlePost" | "category";
};

const { article, isLast, isFirst, type } = Astro.props;
const category: Category = categoriesHandler.oneCategory(article.categories[0]);
---

<article
  class:list={[
    "flex   ",
    isFirst ? "pt-0" : "pt-2",
    !type
      ? "group items-stretch gap-4 group relative isolate"
      : type === "singlePost"
        ? "h-fit items-center gap-4"
        : "h-fit items-center gap-1.5 py-2 ",
  ]}
>
  <div
    class:list={[
      !type
        ? "overflow-hidden w-[149px] h-[84px] shrink-0"
        : type === "singlePost"
          ? " aspect-[5/3]"
          : "h-[60px] aspect-[17/10]",
    ]}
  >
    <img
      src={article._embedded["wp:featuredmedia"]?.[0]["source_url"] ||
        imageNotFound.src}
      alt={decode(String(article.title.rendered))}
      loading="eager"
      class:list={[
        "object-cover w-full h-full",
        !type
          ? " rounded-sm "
          : type === "singlePost"
            ? "rounded-sm !m-0"
            : " ",
      ]}
      width={149}
      height={84}
    />
  </div>

  <div class="flex flex-col flex-1">
    <div class="flex items-center gap-2 mb-1">
      <div class="flex-1">
        <h3
          class:list={[
            " text-base lg:hover:underline leading-5 font-serif font-semibold line-clamp-3 ",
            !type
              ? " text-base mb-1 "
              : type === "singlePost"
                ? " !text-base line-clamp-3 font-medium !m-0 leading-[1.2] "
                : "text-sm font-normal line-clamp-3 ",
          ]}
        >
          <a
            class="!break-normal h-full no-underline"
            href={`/${category.slug}/${article.slug}`}
            title={decode(String(article.title.rendered))}
          >
            {decode(String(article.title.rendered))}
          </a>
        </h3>
      </div>
    </div>
    {
      !type === null || type === "category" ? null : (
        <div class="flex items-center gap-2 text-xs text-base-content/80 mt-1 lg:mt-auto">
          <span class="flex uppercase text-[#10477C] min-h-[18px] items-center font-medium dark:text-secondary px-1.5 bg-[#FBC208] rounded-md">
            {category.name}
          </span>
          <span>{formatDateTime(article.date)}</span>
        </div>
      )
    }
  </div>
</article>
